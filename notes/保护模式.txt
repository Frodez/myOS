保护模式下，段寄存器仍然存在且为16位。但是段寄存器不能直接表达段基址，而需要全局描述符表。

有一个专门的寄存器GDTR指向该全局描述符表。

段寄存器中的值用于索引全局描述符表中的某个段描述符，即选择子。

特权等级存放在描述符中。段寄存器的第0-1位也指明了所访问段的特权等级，以供比对。

CS段寄存器只允许具备可执行属性的段加入。

只具备可执行属性的段不允许加载到非CS段寄存器。

SS段寄存器只允许具备可写属性的段加入。

DS，ES，FS，GS段寄存器需要具备可读属性。

特权级有4级，0-3，数字越小等级越高。

低特权级可调用或JMP高特权级代码，高特权级不可调用低特权级代码。
只有返回可以让特权级变低。如果需要从高特权级转移至低特权级，必须模拟低特权级调用高特权级的中间过程，通过返回的形式，转移到低特权级。

需要三个特权级进行权限检查。

DPL即描述符特权级，位于段描述符表中，用于确定当前代码段的特权级。

CPL即当前特权级，位于代码段寄存器CS中，用于确定当前代码的特权级。

RPL即请求特权级，位于段选择子，用于确定访问者（即请求者）的特权等级。

RPL和CPL的关系在于，段选择子可以加载到CS中，加载前的CS中的对应字段表示了CPL，而要加载的段选择子对应字段则表示了RPL。

代码段分为一致代码段和非一致代码段。

一致代码段指，转移到当前代码段时，CPL（即当前特权级）和之前代码保持一致。特权级相等或更低的代码段可以调用该代码段。

非一致代码段中，只有特权级相等的代码可以调用该代码段。

转移控制权的方法，一个是一致代码段（可以让低特权级代码段跳转过来），一个是门。

门分为调用门，中断门，陷阱门，任务门。常用的门有中断门和陷阱门。

调用门可以在跳转指令时使用。jmp far指令下，CPL不会发生变化；call far指令下，CPL会更新为目标代码段的DPL。

访问数据段时，需要(CPL, RPL)<=DPL，即当前特权级和请求特权级均不大于段特权级。这体现了高特权级代码可以访问低特权级数据。如果是通过SS寄存器，约束严格化为等于。

访问代码段时，需要(CPL, RPL)>=DPL，即当前特权级和请求特权级均不小于段特权级。这体现了低特权级才可以调用高特权级代码。

使用调用门时，需要目标代码段DPL<=(CPL, RPL)<=调用门DPL。

使用任务门时，需要(CPL, RPL)<=DPL。